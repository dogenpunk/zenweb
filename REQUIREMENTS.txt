Requirements Document, Version 1.0.0, 
Created: 2000-01-17
Modified: 2000-01-17

+ Must provide a generic architecture for generating a website from a
file called a sitemap, and a directory of files that provide the
content.

+ The sitemap consists of a list of urls and metadata.

+ The urls in the sitemap correspond to the files in the content
directory.

+ The urls in the sitemap will also have an optional pagetype, which
will dictate what will generate the page, and correspondingly, what
the page will look like.

+ Another file, named Metadata.rb, contains metadata of it's own that
is scoped to all files in the directory and below. This file may exist
in any directory and will overlay the metadata defined in files in any
parent directories.

+ A simple, default, markup scheme will be defined and will determine
the overall structure of the page.

+ Embedded ruby should be evaluated and the result should be emitted
into the resulting content.

+ Scope of Metadata:

  { Sitemap { Metadata.rb { Metadata.rb* { File }}}}

+ General Structure:

data/
  SiteMap [ urls, pagetypes, metadata ]
  other content files
  Metadata.rb
  subdir/
    other content files
    Metadata.rb

+ General Algorithm:

1) Open Sitemap:
  1) Read all urls:
    1) Find page corresponding to url.
    2) Open file.
    3) Parse file, extracting metadata and content.
    4) Based on current metadata, instantiate the correct type of page.
2) Generate a makefile OR dependency map.
3) Run make OR iterate over each page instance and IF it should be generated, generate it.
